{"version":3,"sources":["components/Imagecard.js","components/ImageSearch.js","App.js","index.js"],"names":["Imagecard","image","tags","split","className","src","webformatURL","alt","user","views","downloads","likes","map","tag","index","ImageSearch","searchText","useState","text","setText","onSubmit","e","preventDefault","onChange","target","value","type","placeholder","App","images","setImages","isLoading","setIsLoading","term","setTrem","useEffect","fetch","process","then","res","json","data","hits","catch","err","console","log","length","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qKA2CeA,EAzCG,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACVC,EAAOD,EAAMC,KAAKC,MAAM,KAC9B,OACI,sBAAKC,UAAW,6CAAhB,UACI,qBAAKC,IAAKJ,EAAMK,aAAcC,IAAI,GAAGH,UAAU,WAC/C,sBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAU,yCAAf,sBACcH,EAAMO,QAEpB,+BACA,+BACI,4CAGCP,EAAMQ,SAEX,+BACI,+CAGCR,EAAMS,aAEX,+BACI,4CAGCT,EAAMU,eAIf,qBAAKP,UAAU,YAAf,SACCF,EAAKU,KAAI,SAACC,EAAIC,GAAL,OACL,uBAAkBV,UAAU,2FAA5B,cACKS,IADMC,YCTbC,EAvBI,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WAAgB,EAChBC,mBAAS,IADO,mBAC9BC,EAD8B,KACzBC,EADyB,KAMjC,OACE,qBAAKf,UAAU,iDAAf,SACI,sBAAMgB,SANC,SAACC,GACdA,EAAEC,iBACFN,EAAWE,IAIqBd,UAAU,kBAApC,SACI,sBAAKA,UAAU,6DAAf,UACI,uBAAOmB,SAAU,SAAAF,GAAC,OAAGF,EAAQE,EAAEG,OAAOC,QAAQrB,UAAU,oHACOsB,KAAK,OACpEC,YAAY,qBACZ,wBAAQvB,UAAU,4EAA4EsB,KAAK,SAAnG,4BCcHE,MA1Bf,WAAgB,IAAD,EACeX,mBAAS,IADxB,mBACJY,EADI,KACGC,EADH,OAEqBb,mBAAS,EAAC,IAF/B,mBAEJc,EAFI,KAEMC,EAFN,OAGWf,mBAAS,IAHpB,mBAGJgB,EAHI,KAGEC,EAHF,KAaX,OATAC,qBAAU,WACNC,MAAM,gCAAD,OAAiCC,qCAAjC,cAA4EJ,EAA5E,kCACJK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAM,SAAAG,GACHX,EAAUW,EAAKC,MACfV,GAAa,MAEhBW,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC5B,CAACX,IAEA,sBAAK7B,UAAU,oBAAf,UACC,cAAC,EAAD,CAAaY,WAAY,SAACE,GAAD,OAAQgB,EAAQhB,OACvCa,GAA+B,IAAlBF,EAAOkB,QAAgB,oBAAI3C,UAAU,sCAAd,6BAClC2B,EAAW,oBAAI3B,UAAU,qCAAd,yBAAoE,qBAAKA,UAAU,yBAAf,SAC3EyB,EAAOjB,KAAI,SAAAX,GAAK,OACb,cAAC,EAAD,CAA0BA,MAAOA,GAAjBA,EAAM+C,aChBzCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.db24d0ab.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Imagecard = ({image}) => {\r\n    const tags = image.tags.split(',')\r\n    return (\r\n        <div className =\"max-w-sm rounded overflow-hidden shadow-lg\">\r\n            <img src={image.webformatURL} alt=\"\" className=\"w-full\" />\r\n            <div className=\"px-6 py-4\">\r\n                <div className=\"font-bold text-purple-500 text-xl mb-2\">\r\n                    photo by {image.user}\r\n                </div>\r\n                <ul>\r\n                <li>\r\n                    <strong>\r\n                        views:\r\n                    </strong>\r\n                    {image.views}\r\n                </li>\r\n                <li>\r\n                    <strong>\r\n                        download:\r\n                    </strong>\r\n                    {image.downloads}\r\n                </li>\r\n                <li>\r\n                    <strong>\r\n                        likes:\r\n                    </strong>\r\n                    {image.likes}\r\n                </li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"px-6 py-4\">\r\n            {tags.map((tag,index) =>(\r\n                 <span key={index} className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2\">\r\n                    #{tag}\r\n                </span>\r\n            ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Imagecard;","import React, { useState } from 'react';\r\n\r\nconst ImageSearch =({searchText}) => {\r\nconst [text,setText]=useState('');\r\nconst onSubmit = (e)=>{\r\n    e.preventDefault();\r\n    searchText(text);\r\n}\r\n    return (\r\n      <div className=\"max-w-sm rounded overflow-hidden my-10 mx-auto\">\r\n          <form onSubmit={onSubmit} className='w-full max-w-sm'>\r\n              <div className=\"flex items-center border-b border-b-2 border-teal-500 py-2\">\r\n                  <input onChange={e=> setText(e.target.value)} className=\"appearance-none bg-transparent border-none w-full\r\n                  text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none\" type=\"text\"\r\n                  placeholder=\"search image....\" />\r\n                  <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\" type=\"submit\">\r\n  search\r\n</button>\r\n               </div>\r\n              \r\n          </form>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ImageSearch;","import React, {useState,useEffect}from 'react';\r\nimport Imagecard from './components/Imagecard';\r\nimport ImageSearch from './components/ImageSearch';\r\nfunction App() {\r\n    const [images,setImages]= useState([]);\r\n    const [isLoading,setIsLoading]= useState([true]);\r\n    const [term ,setTrem]=useState('');\r\n    useEffect(()=>{\r\n        fetch(`https://pixabay.com/api/?key=${process.env.REACT_APP_PIXABAY_API_KEY}&q=${term}&image_type=photo&pretty=true`)\r\n        .then(res => res.json())\r\n        .then (data => {\r\n            setImages(data.hits);\r\n            setIsLoading(false);\r\n        })\r\n        .catch(err => console.log(err))\r\n    },[term]);\r\n    return (\r\n       <div className=\"container mx-auto\">\r\n        <ImageSearch searchText={(text)=>setTrem(text)}/>\r\n        {!isLoading && images.length === 0 && <h1 className=\"text-6xl text-center  mx-auto mt-32\">image not found</h1> }\r\n           {isLoading ?<h1 className=\"text-6xl text-center mx-auto mt-32\">loading....</h1>:<div className=\"grid grid-cols-3 gap-4\">\r\n               {images.map(image=>(\r\n                   <Imagecard key={image.id} image={image}/>\r\n               ))}\r\n           </div>}\r\n       </div> \r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/main.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}